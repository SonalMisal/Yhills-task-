#!/usr/bin/env python
# coding: utf-8

# In[1]:


# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error



# In[2]:



# Load the dataset
df = pd.read_csv('TaxiFare.csv')


# In[3]:




# Feature engineering
df['date_time_of_pickup'] = pd.to_datetime(df['date_time_of_pickup'])
df['pickup_hour'] = df['date_time_of_pickup'].dt.hour
df['pickup_day_of_week'] = df['date_time_of_pickup'].dt.dayofweek


# In[5]:



# Split the data
X = df.drop(['unique_id', 'amount', 'date_time_of_pickup'], axis=1)
y = df['amount']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
predictions = model.predict(X_test)

# Evaluate the model
mae = mean_absolute_error(y_test, predictions)
print(f'Mean Absolute Error: {mae}')


# he Mean Absolute Error (MAE) value of 6.034 represents the average difference between the predicted taxi fare amounts
# generated by our model and the actual fare amounts in the test set. In simpler terms, this value indicates how close, on average, our model's predictions are to the real taxi fare amounts.
# A lower MAE is desirable in this context, as it signifies that our
# model tends to make predictions that are more accurate, with smaller deviations from the actual fare amounts."
